name: 'Setting AWS Credentials for ECS or EKS'
description: 'Set the right credentials depending if it needs to deploy to ECS or EKS'
inputs:
  AWS_ACCESS_KEY_ID:
    description: 'Access key to access ECR'
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: 'Secret key to access ECR'
    required: true
  AWS_ACCESS_KEY_ID_NONPROD:
    description: 'Access key to access ECR in NONPROD account'
    required: true
  AWS_SECRET_ACCESS_KEY_NONPROD:
    description: 'Secret key to access ECR in NONPROD account'
    required: true
outputs:
  AWS_ACCESS_KEY_ID:
    description: "A string valued as true or false"
    value: ${{ steps.vars.outputs.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:
    description: "A string valued as true or false"
    value: ${{ steps.vars.outputs.AWS_SECRET_ACCESS_KEY }}
runs:
  using: "composite"
  steps:
    - name: Set credentials and tag for ECS or EKS build
      id: vars
      # If repository ends with dev, stg, or prod, it is an ECS deployment, and we need legacy credentials.
      # If it doesn't, it is an EKS deployment, and we need NONPROD credentials.
      run: |
        ENVIRONMENT=$(echo ${{ inputs.ECR_REPOSITORY }} | rev | cut -d'-' -f1 | rev)
        if [ $ENVIRONMENT = prod -o $ENVIRONMENT = stg -o $ENVIRONMENT = dev ];then 
          echo AWS_ACCESS_KEY_ID=${{ inputs.AWS_ACCESS_KEY_ID }} >> $GITHUB_OUTPUT;
          echo AWS_SECRET_ACCESS_KEY=${{ inputs.AWS_SECRET_ACCESS_KEY }} >> $GITHUB_OUTPUT;
        else
          echo AWS_ACCESS_KEY_ID=${{ inputs.AWS_ACCESS_KEY_ID_NONPROD }} >> $GITHUB_OUTPUT;
          echo AWS_SECRET_ACCESS_KEY=${{ inputs.AWS_SECRET_ACCESS_KEY_NONPROD }} >> $GITHUB_OUTPUT;
        fi
      shell: bash
