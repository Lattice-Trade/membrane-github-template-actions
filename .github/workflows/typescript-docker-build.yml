name: Build & test

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: false
        type: string
        default: us-east-2
      ECR_REPOSITORY:
        required: true
        type: string
      GH_SHA:
        required: true
        type: string
      HAS_UNIT_TEST:
        required: true
        type: boolean
      GH_PR_MERGED:
        required: true
        type: boolean
      GH_BRANCH_NAME:
        required: true
        type: string
      NODE_VERSION:
        required: true
        type: string
    # secrets:
    #   AWS_ACCESS_KEY_ID:
    #     required: true
    #   AWS_SECRET_ACCESS_KEY:
    #     required: true
    #   NPM_TOKEN:
    #     required: true
    outputs:
      IMAGE_NAME:
        description: "A FQDN of the image to be built and pushed"
        value: ${{ jobs.docker-build.outputs.IMAGE_NAME }}
      IMAGE_TAG:
        description: "Only the tag of the image"
        value: ${{ jobs.docker-build.outputs.IMAGE_TAG }}
jobs:
  docker-build:
    if: ${{ inputs.GH_PR_MERGED }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      IMAGE_NAME: ${{ steps.image.outputs.NAME }}
      IMAGE_TAG: ${{ steps.image.outputs.TAG }}
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          ref: ${{ inputs.GH_BRANCH_NAME }}
    - name: Login to ECR
      id: ecr-login
      uses: Lattice-Trade/membrane-github-composite-actions/aws/ecr-login@feature/LM-9164-step-deduplication
      with:
        AWS_REGION: ${{ inputs.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Export image variables
      id: image
      run: |
        echo "TAG=${{ inputs.IMAGE_TAG }}" >> $GITHUB_OUTPUT
        echo "NAME=${{ steps.ecr-login.outputs.ECR_REGISTRY }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.GH_SHA }}" >> $GITHUB_OUTPUT
      shell: bash
    # - name: Notify build start on slack
    #   uses: Lattice-Trade/github-action-slack-notify-build@main
    #   continue-on-error: true
    #   with:
    #     channel: ${{ inputs.SLACK_CHANNEL }}
    #     status: STARTED
    #     color: good
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_ALARMS_TOKEN }}
    - name: Build and push to ECR
      id: docker-build
      uses: Lattice-Trade/membrane-github-composite-actions/docker/build-push@feature/LM-9164-step-deduplication
      with:
        IMAGE_NAME: ${{ steps.image.outputs.NAME }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #       image-ref: '${{ steps.ecr-login.outputs.ECR_REGISTRY }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.GH_SHA }}'
    #       format: 'table'
    #       exit-code: '0'
    #       ignore-unfixed: true
    #       vuln-type: 'os,library'
    #       severity: 'CRITICAL,HIGH'
    #   env:
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
    #       AWS_DEFAULT_REGION: ${{ inputs.AWS_REGION }}