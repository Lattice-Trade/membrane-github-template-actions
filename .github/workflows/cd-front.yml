name: Deploy to prod

on:
  workflow_call:
    inputs:
      GH_BRANCH_NAME:
        required: true
        type: string
      GH_ENV:
        required: true
        type: string
      GH_PR_MERGED:
        required: true
        type: boolean
      GH_SHA:
        required: true
        type: string
      GH_REF:
        required: true
        type: string
      SLACK_CHANNEL:
        required: true
        type: string
      NEW_RELIC_APPLICATION_ID:
        required: false
        type: string
      NEW_RELIC_WORKER_ID:
        required: false
        type: string
      NODE_VERSION:
        required: true
        type: string
      S3_BUCKET:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      CLOUDFRONT_ID:
        required: true
        type: string
      REACT_APP_SENTRY_API_URL:
        required: true
        type: string
      REACT_APP_API_URL:
        required: true
        type: string
      REACT_APP_LOAN_API_URL:
        required: true
        type: string
      REACT_APP_API_URL_NOTIFICATIONS_OLD:
        required: true
        type: string
      REACT_APP_API_URL_NOTIFICATIONS:
        required: true
        type: string
      ESLINT_NO_DEV_ERRORS:
        required: true
        type: boolean
      DISABLE_ESLINT_PLUGIN:
        required: true
        type: boolean
      REACT_APP_ENVIRONMENT:
        required: true
        type: string
      REACT_APP_LOAN_API_URL_V2:
        required: true
        type: string
      REACT_APP_TRADING_API_URL_V2:
        required: true
        type: string
      REACT_APP_PINGDOM_SCRIPT:
        required: true
        type: string
      REACT_APP_PINGDOM_SCRIPT_INTEGRITY:
        required: true
        type: string
      REACT_APP_DISABLE_BLACKLIST:
        required: true
        type: boolean
      REACT_APP_DISABLE_PAYMENT_FREQUENCY:
        required: true
        type: boolean
      REACT_APP_DISABLE_REQUEST_CREATE_INSTITUTION_VIEW:
        required: true
        type: boolean
      REACT_APP_DISABLE_SPEED_UP:
        required: true
        type: boolean
      REACT_APP_BLOCKPASS_CLIENT_ID:
        required: true
        type: string
      REACT_APP_GOOGLE_CAPTCHA_SECRET_KEY:
        required: true
        type: string
      GIT_PKG_AUTH_TOKEN:
        required: true
        type: string
      GENERATE_SOURCEMAP:
        required: true
        type: boolean
      CI:
        required: true
        type: boolean
    secrets:
      NPM_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true    
      SLACK_ALARMS_TOKEN:
        required: true
      NEW_RELIC_ACCOUNT_ID:
        required: false
      NEW_RELIC_API_KEY:
        required: false
        
jobs:
  cd:
    if: ${{ inputs.GH_PR_MERGED }} 
    name: deploy to ${{ inputs.GH_ENV }} 
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ${{ inputs.GH_ENV }} 
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }} 
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          ref: ${{ inputs.GH_BRANCH_NAME }} 

    - uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: ${{ inputs.SLACK_CHANNEL }}
        status: STARTED
        color: good
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_ALARMS_TOKEN }}
  
    - name: Use cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-frontend

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/setup-node@v3
      with:
          node-version: ${{ inputs.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
          
    - name: Code build
      run: npm ci

    - name: Code Run Build
      run: npm run build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Deploy static site to S3 bucket
      run: aws s3 sync ./build/ s3://${{ inputs.S3_BUCKET }} --delete --acl public-read

    - name: Create Cloudfront invalidation to clean client cache
      run: aws cloudfront create-invalidation --distribution-id ${{ inputs.CLOUDFRONT_ID }} --paths "/*"

    - name: Notify slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_ALARMS_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: ${{ inputs.SLACK_CHANNEL }}
        status: SUCCESS
        color: good

    - name: Notify slack fail
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_ALARMS_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: ${{ inputs.SLACK_CHANNEL }}
        status: FAILED
        color: danger