name: Build & Test

on:
  workflow_call:
    inputs:
      HAS_UNIT_TEST:
        required: true
        type: boolean
      GH_BASE_REF:
        required: true
        type: string
      GH_HEAD_REF:
        required: true
        type: string
      NODE_VERSION:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate PR origin branch to develop
        if: ${{ inputs.GH_BASE_REF == 'develop' && (!startsWith(inputs.GH_HEAD_REF, 'feature/') && !startsWith(inputs.GH_HEAD_REF, 'enhancement/') && !startsWith(inputs.GH_HEAD_REF, 'refactor/') && !startsWith(inputs.GH_HEAD_REF, 'fix/') && !startsWith(inputs.GH_HEAD_REF, 'migration/') && !startsWith(inputs.GH_HEAD_REF, 'release/') && !startsWith(inputs.GH_HEAD_REF, 'rc-feature/') && !startsWith(inputs.GH_HEAD_REF, 'backport/')) }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('origin branch from where the pull request is made is not known. Make sure to make a pull request from a known source branch, such as: feature/*, refactor/*, fix/*, migration/*, release/*, rc-feature/*, backport/*. For more details check the following documentation https://latticetrade.atlassian.net/l/cp/PUaek51t')
      
      - name: Validate origin branch to staging
        if: ${{ inputs.GH_BASE_REF == 'staging' && (!startsWith(inputs.GH_HEAD_REF, 'develop') && !startsWith(inputs.GH_HEAD_REF, 'hotfix/') && !startsWith(inputs.GH_HEAD_REF, 'main') && !startsWith(inputs.GH_HEAD_REF, 'release/') && !startsWith(inputs.GH_HEAD_REF, 'backport/')) }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('origin branch from where the pull request is made is not known. Make sure to make a pull request from a known source branch, such as: develop, hotfix/*, main, release/*, backport/*. For more details check the following documentation https://latticetrade.atlassian.net/l/cp/PUaek51t')
      
      - name: Validate origin branch to main
        if: ${{ inputs.GH_BASE_REF == 'main' && (!startsWith(inputs.GH_HEAD_REF, 'staging') && !startsWith(inputs.GH_HEAD_REF, 'hotfix/')) }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('origin branch from where the pull request is made is not known. Make sure to make a pull request from a known source branch, such as: staging, hotfix/*. For more details check the following documentation https://latticetrade.atlassian.net/l/cp/PUaek51t')


      - name: Use cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
            node-version: ${{ inputs.NODE_VERSION }}
            registry-url: https://registry.npmjs.org/

      - name: Code build
        run: npm ci

      - name: Run unit tests
        if: inputs.HAS_UNIT_TEST
        run: npm test

      - name: Run lint
        run: npm run lint