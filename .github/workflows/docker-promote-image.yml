name: 'ðŸ“¦ Promote image to prod'

on: 
  workflow_call:
    inputs:
      GH_VERSION:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      ECR_NAME_PROD:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID_PROD:
        required: false
      AWS_SECRET_ACCESS_KEY_PROD:
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Log into staging ECR
      id: staging-ecr-login
      uses: Lattice-Trade/membrane-github-composite-actions/aws/ecr-login@feature/LM-9164-step-deduplication
      with:
        AWS_REGION: ${{ inputs.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Pull image
      run: |
        STG_REPOSITORY=$(echo $(echo $var | rev | cut -d'-' -f2- | rev)-stg)
        docker pull ${{ staging-ecr-login.outputs.ECR_REGISTRY }}/$STG_REPOSITORY:${{ inputs.GH_VERSION }}

    - name: Log into production ECR
      id: production-ecr-login
      uses: Lattice-Trade/membrane-github-composite-actions/aws/ecr-login@feature/LM-9164-step-deduplication
      with:
        AWS_REGION: ${{ inputs.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}

    - name: Push image
      run: |
        docker tag ${{ staging-ecr-login.outputs.ECR_REGISTRY }}/$STG_REPOSITORY:${{ inputs.GH_VERSION }} ${{ production-ecr-login.outputs.ECR_REGISTRY }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.GH_VERSION }}
        docker push ${{ production-ecr-login.outputs.ECR_REGISTRY }}/$PROD_REPOSITORY:${{ inputs.GH_VERSION }}
