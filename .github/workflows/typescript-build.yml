name: 'ðŸ“¦ Build application'

on: 
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true
        type: string
      NPM_REGISTRY:
        description: "Hostname of NPM registry to setup"
        required: false
        type: string
        default: "registry.npmjs.org"
      NPM_SCOPE:
        description: "Account owner to use as GitHub Packages scope"
        type: string
        required: false
      USE_PAT:
        description: For old repos that used Personal Access tokens they should pass a TRUE. New repos will use $GITHUB_TOKEN.
        required: false
        type: boolean
        default: false
      IS_RELEASE_CANDIDATE:
        description: If this a release candidate package, it will be published with an affix in NPM.
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN_RO }}
    steps:
      - name: Setup node
        uses: Lattice-Trade/membrane-github-template-actions/composite-actions/npm/setup-node@feature/{LM-10511}-npm-publishing
        with:
          NODE_VERSION: ${{ inputs.NODE_VERSION }}
          NPM_REGISTRY: ${{ inputs.NPM_REGISTRY }}
          NPM_SCOPE: ${{ inputs.NPM_SCOPE }}
      - name: Download and unzip dependencies artficat
        uses: Lattice-Trade/membrane-github-template-actions/composite-actions/git/download-artifact@feature/{LM-10511}-npm-publishing
      - name: Build code
        run: npm run build
      - name: Set the right publish token (PAT or GITHUB_TOKEN)
        run: |
          if [ ${{ inputs.USE_PAT }} = true ];then
            echo PUBLISH_TOKEN=${{ secrets.NPM_TOKEN_PUBLISH }} >> $GITHUB_ENV;
          else
            echo PUBLISH_TOKEN=${{ secrets.GITHUB_TOKEN }} >> $GITHUB_ENV;
          fi
        shell: bash
      - name: Change tag to release candidate
        if: inputs.IS_RELEASE_CANDIDATE
        # run: npm version $(jq -r .version package.json)-rc-$(echo ${GITHUB_SHA} | cut -c1-7) --git-tag-version false
        run: npm version $(jq -r .version package.json)-rc --git-tag-version false
        shell: bash
      - name: Publish to GitHub Package Registry
        # This job only runs when we try to publish new SDKs as we set our own github registry instead of npm public registry
        if: ${{ inputs.NPM_REGISTRY == 'npm.pkg.github.com' }}
        run: |
          cp package.json dist/
          npm publish dist --force
        env:
          NPM_TOKEN: ${{ env.PUBLISH_TOKEN }}
